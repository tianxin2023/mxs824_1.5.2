/* Copyright (C) 2018 - 2020 Dolphin Interconnect Solutions AS. All rights reserved */
function _draw_port(t,e,r,i){r.ctx.save();r.ctx.fillStyle=i;r.ctx.fillRect(t+1,e+1,r.portSize-2,r.portSize-2);r.ctx.strokeStyle=r.color.portBorder;r.ctx.strokeRect(t,e,r.portSize,r.portSize);r.ctx.restore();r.ctx.save();r.ctx.fillStyle="rgba(0,0,0,0.3)";r.ctx.fillRect(t+1,e+1,r.portSize-2,2);r.ctx.fillRect(t+1,e+3,2,r.portSize-4);r.ctx.restore()}function _draw_portrow(t,e,r,i){var o;var c=r.color.inactive;var a="white";var l=i.cfgLinkWidth/4;if(i.linkUp){if(i.negLinkWidth>=i.cfgLinkWidth){c=r.color.active}else{c=r.color.reduced;a=r.color.reduced}}r.ctx.save();r.ctx.font=r.portSize/3+"px sans-serif";r.ctx.fillStyle=a;r.ctx.fillText("x"+(i.linkUp?i.negLinkWidth:i.cfgLinkWidth),t+r.portSize*.06,e-r.portSize*.25);r.ctx.fillText((l>1?"Gen":"G")+(i.linkUp?i.linkRate:"3"),t+r.portSize/50,e+r.portSize*1.75);r.ctx.beginPath();r.ctx.strokeStyle=a;r.ctx.moveTo(t,e-r.portSize*.12);r.ctx.lineTo(t+r.portSize*.96*l,e-r.portSize*.12);r.ctx.stroke();r.ctx.restore();for(o=0;o<l;++o){_draw_port(t,e,r,c);r.ctx.save();r.ctx.font=r.portSize/4+"px sans-serif";r.ctx.fillStyle="rgba(255, 255, 255, 0.6)";r.ctx.fillText(i.physPort/2+1+o,t,e+r.portSize*1.25);r.ctx.restore();t+=r.portSize}if(i.upsFlag){r.ctx.save();r.ctx.font=r.portSize/2+"px sans-serif";r.ctx.fillStyle="rgba(0,0,0,0.3)";r.ctx.fillText("H",t-l*r.portSize+r.portSize/3.5,e+r.portSize*.7);r.ctx.restore()}return l}function _draw_switch(t){var e=t.canvas.parentNode.getBoundingClientRect();t.portSize=Math.round(e.width*.03333);var r=Math.floor((e.width-t.portSize*4*6)/7);var i=0;t.ctx=t.canvas.getContext("2d");t.canvas.width=e.width;t.canvas.height=t.portSize*3+r*2;t.canvas.style.width=e.width+"px";t.canvas.style.height=t.canvas.height+"px";t.ctx.save();t.ctx.fillStyle=t.color.bgColor;t.ctx.fillRect(0,0,t.canvas.width,t.canvas.height);t.ctx.restore();var o=0;var c=0;var a=r;var l=t.canvas.height/2-t.portSize/2;for(o=0;o<t.portStates.length;++o){if(t.portStates[o].partition===255){continue}var x=_draw_portrow(a,l,t,t.portStates[o]);c+=x;a+=t.portSize*x;if(c%4==0){if(i){l+=i;a=r}else{a+=r}}}if(c==0){t.ctx.save();t.ctx.font=Math.round(t.canvas.width*.05)+"px sans-serif";t.ctx.fillStyle="rgba(255,255,255,1.0)";t.ctx.fillText("No port data available :-(",r,t.canvas.height/2+r/2);t.ctx.restore()}}